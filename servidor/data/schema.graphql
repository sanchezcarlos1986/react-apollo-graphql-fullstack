""" Información del Cliente """
  type Cliente {
    id: ID
    nombre: String
    apellido: String
    empresa: String
    emails: [Email]
    edad: Int
    tipo: TipoCliente
  }

  """ Tipo de dato para Emails """
  type Email {
    email: String
  }

  """ Información del Producto """
  type Producto {
    id: ID
    nombre: String
    precio: Int
    stock: Int
  }

  """ Información del Pedido """
  type Pedido {
    id: ID
    pedido: [PedidoProducto]
    total: Int
    fecha: String
    cliente: ID
    estado: Estadopedido    
  }

  type PedidoProducto {
    id: ID 
    cantidad: Int
  }

  """ Información de Gráficas """
  type ClienteTotal {
    total: Float
    cliente: [Cliente]
  }

  """ Tipos de clientes """
  enum TipoCliente {
    BASICO
    PREMIUM
  }

    """ Tipos de pedidos """
  enum Estadopedido {
    PENDIENTE
    COMPLETADO
    CANCELADO
  }

  """ Query para obtener datos del Cliente """
  type Query {
    getClientes(limite: Int, offset: Int) : [Cliente]
    getCliente(id: ID): Cliente
    totalClientes: String
    #Productos
    obtenerProductos(limite: Int, offset: Int, stock: Boolean) : [Producto]
    obtenerProducto(id: ID): Producto
    totalProductos: String
    #Pedidos
    obtenerPedidos(cliente: ID): [Pedido]
    #Gráficas
    topClientes: [ClienteTotal]
  }

  #""" Campo para ingresar Emails """
  input EmailInput {
    email: String
  }

  """ Campos para crear nuevos clientes """
  input ClienteInput {
    id: ID
    nombre: String!
    apellido: String!
    empresa: String!
    emails: [EmailInput]
    edad: Int!
    tipo: TipoCliente!
    pedidos: [PedidoInput]
  }

  """ Campos para crear nuevos productos """
  input ProductoInput {
    id: ID
    nombre: String!
    precio: Int!
    stock: Int!
  }

  input PedidoInput {
    id: ID
    pedido: [PedidoProductoInput]
    total: Int
    fecha: String
    cliente: ID
    estado: Estadopedido    
  }

  input PedidoProductoInput {
    id: ID 
    cantidad: Int
  }

  """ Mutations para crear nuevos Clientes """
  type Mutation {
    #Nombre del resolver, Input con datos y valor que retorna
    """ Te permite crear nuevos clientes """
    crearCliente(input: ClienteInput): Cliente
    actualizarCliente(input: ClienteInput): Cliente
    eliminarCliente(id: ID!): String
    # Productos
    nuevoProducto(input: ProductoInput): Producto
    actualizarProducto(input: ProductoInput): Producto
    eliminarProducto(id: ID!): String
    # Pedidos
    nuevoPedido(input: PedidoInput): Pedido
    actualizarPedido(input: PedidoInput): String
    # Usuarios
    crearUsuario(usuario: String!, password: String!): String
  }